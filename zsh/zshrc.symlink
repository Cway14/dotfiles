zmodload zsh/zprof
# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles
export ZSH_SAP=$HOME/.dotfiles.sap

# your project folder that we can `c [tab]` to
export PROJECTS=~/SAPDevelop

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
if [[ -d $ZSH_SAP ]]
then
  config_files=($ZSH/**/*.zsh $ZSH_SAP/**/*.zsh)
else
  config_files=($ZSH/**/*.zsh)
fi

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
# Smarter completion initialization
autoload -Uz compinit
if [ "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)" ]; then
    echo "Rebuilding completion cache..."
    compinit
else
    compinit -C
fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# Conditional zprof output - only show top 3 if startup > 1 second
export ZPROF_ENABLED=true
if [[ -n "$ZPROF_ENABLED" ]] || [[ "$1" == "--profile" ]]; then
    local ZPROF_THRESHOLD=100
    # Get the total time from zprof output
    zprof_output=$(zprof)
    total_time=$(echo "$zprof_output" | awk '
        /^[[:space:]]*[0-9]+\)/ {
            total += $3
        }
        END {
            print int(total)
        }')

    # Check if startup time > threshold
    if (( total_time > $ZPROF_THRESHOLD )); then
        echo "🐌 Slow terminal startup detected (${total_time}ms > ${ZPROF_THRESHOLD}ms)"
        echo "$zprof_output" | head -5 | tail -4
    fi
fi
